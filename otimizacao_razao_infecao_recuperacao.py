# -*- coding: utf-8 -*-
"""otimizacao_razao_infecao_recuperacao

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RvPojSLR55jwqanduMG0TV3pAWgq3R7_
"""

import numpy as np
from scipy.optimize import minimize

def simular_propagacao_lattice(lado, dias, prob_infeccao, prob_recuperacao, num_simulacoes):
    resultados = []

    for _ in range(num_simulacoes):
        grid = np.zeros((lado, lado), dtype=int)
        infectados = [(lado // 2, lado // 2)]
        grid[lado // 2, lado // 2] = 1

        for _ in range(dias):
            novos_infectados = []

            for x, y in infectados:

                for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:
                    nx, ny = x + dx, y + dy
                    if 0 <= nx < lado and 0 <= ny < lado:
                        if grid[nx, ny] == 0 and np.random.rand() < prob_infeccao:
                            novos_infectados.append((nx, ny))
                            grid[nx, ny] = 1


            for x, y in infectados:
                if np.random.rand() < prob_recuperacao:
                    grid[x, y] = 2

            infectados = novos_infectados

        resultados.append(np.sum(grid == 1))

    return np.array(resultados)


def otimizar_razao(lado, dias, num_simulacoes):
    def objetivo(x):
        prob_infeccao = x[0]
        prob_recuperacao = x[1]
        resultados = simular_propagacao_lattice(lado, dias, prob_infeccao, prob_recuperacao, num_simulacoes)
        return prob_infeccao / prob_recuperacao if np.mean(resultados > 5000) > 0 else np.inf

    resultado = minimize(objetivo, [0.5, 0.5], bounds=[(0, 1), (0, 1)], method='L-BFGS-B')
    return resultado


lado = 100
dias = 30
num_simulacoes = 1000


resultado = otimizar_razao(lado, dias, num_simulacoes)
prob_infeccao_otimizada = resultado.x[0]
prob_recuperacao_otimizada = resultado.x[1]
menor_razao = prob_infeccao_otimizada / prob_recuperacao_otimizada

print(f'A menor razão probabilidade de infecção / probabilidade de recuperação onde a doença ainda se propaga para mais de 5000 células é:')
print(f'Probabilidade de Infecção: {prob_infeccao_otimizada:.2f}')
print(f'Probabilidade de Recuperação: {prob_recuperacao_otimizada:.2f}')
print(f'Relação (Infecção/Recuperação): {menor_razao:.2f}')